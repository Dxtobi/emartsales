// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


type Hero {
  image String
  header String
  text String
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String?   @unique
  name          String
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String    @default("buyer")
  accounts      Account[]
  sessions      Session[]
  
  Orders        Order[]
  products       Product[]
  address String?
  phone   String?
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  product_name        String
  product_price       String
  product_description String?
  seller_contact      String?
  created_at          String
  slug                String[]
  images              String[]
  likes               String[]
  userId              String   @unique @db.ObjectId
  user                User     @relation(fields: [userId], references: [id])
  Order               Order?   @relation(fields: [orderId], references: [id])
  orderId             String?  @db.ObjectId
}

model Order {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  status     String    @default("pending")
  product    Product[]
  created_at String
  userId     String    @unique @db.ObjectId
  user       User      @relation(fields: [userId], references: [id])
}

model Tag {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  tag_name     String    @default("Product")
}

model SiteInfo {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  hero     Hero[]
}
